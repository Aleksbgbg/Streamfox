//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "views")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: i64,
  pub created_at: Option<DateTimeWithTimeZone>,
  pub updated_at: Option<DateTimeWithTimeZone>,
  pub user_id: i64,
  pub video_id: i64,
  pub started_at: DateTimeWithTimeZone,
  pub bytes_streamed: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::users::Entity",
    from = "Column::UserId",
    to = "super::users::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Users,
  #[sea_orm(
    belongs_to = "super::videos::Entity",
    from = "Column::VideoId",
    to = "super::videos::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Videos,
}

impl Related<super::users::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Users.def()
  }
}

impl Related<super::videos::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Videos.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
